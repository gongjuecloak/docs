name: Build VitePress Site

on:
  push:
    branches: [main]  # 当向 main 分支推送时触发构建，可根据实际情况修改默认分支名
  pull_request:
    branches: [main]  # 在向 main 分支发起拉请求时也触发构建，方便提前检查构建情况

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境来运行构建任务
    steps:
      - name: Checkout
        uses: actions/checkout@v4  # 检出仓库代码到运行环境
        with:
          fetch-depth: 0  # 获取完整的提交历史，确保依赖版本等信息准确

      - name: Setup Node.js
        uses: actions/setup-node@v4  # 设置 Node.js 环境
        with:
          node-version: 20  # 指定 Node.js 的版本为 20，可按需调整
          cache: 'npm'  # 使用 npm 缓存，加快依赖安装速度，也可以是 pnpm 或 yarn 等，取决于你的项目

      - name: Install Dependencies
        run: npm install  # 安装项目依赖，若使用 pnpm 则为 pnpm install，yarn 则为 yarn install
      
      - name: Build VitePress
        run: npm run docs:build  # 运行 VitePress 的构建命令，假设你的构建脚本名为 docs:build，可根据实际修改
        # 如果使用 pnpm 则为 pnpm docs:build，yarn 则为 yarn docs:build

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3  # 将构建生成的文件作为制品上传，方便后续部署等操作使用
        with:
          name: vitepress-build-artifacts
          path: docs/.vitepress/dist  # 假设 VitePress 构建输出目录为这里，根据实际情况调整